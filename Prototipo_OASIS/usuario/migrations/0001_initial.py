# Generated by Django 5.2.5 on 2025-10-01 13:22

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('rol', models.CharField(choices=[('ADMIN', 'Administrador'), ('EMPRESA', 'Empresa'), ('APRENDIZ', 'Aprendiz'), ('INSTRUCTOR', 'Instructor')], default='APRENDIZ', max_length=20, verbose_name='Rol del Usuario')),
                ('esta_activo', models.BooleanField(default=True, verbose_name='Está Activo')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario del Sistema',
                'verbose_name_plural': 'Usuarios del Sistema',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ProgramaFormativo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=150, unique=True, verbose_name='Programa de Formación')),
                ('codigo', models.CharField(max_length=20, unique=True, verbose_name='Código del Programa')),
            ],
            options={
                'verbose_name': 'Programa Formativo',
                'verbose_name_plural': 'Programas Formativos',
            },
        ),
        migrations.CreateModel(
            name='SectorProductivo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True, verbose_name='Sector Productivo')),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripción del Sector')),
            ],
            options={
                'verbose_name': 'Sector Productivo',
                'verbose_name_plural': 'Sectores Productivos',
            },
        ),
        migrations.CreateModel(
            name='PerfilInstructor',
            fields=[
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='perfil_instructor', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('documento', models.CharField(max_length=20, unique=True, verbose_name='Número de Documento')),
                ('area_conocimiento', models.CharField(max_length=100, verbose_name='Área de Conocimiento')),
            ],
            options={
                'verbose_name': 'Perfil de Instructor',
                'verbose_name_plural': 'Perfiles de Instructores',
            },
        ),
        migrations.CreateModel(
            name='PerfilAprendiz',
            fields=[
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='perfil_aprendiz', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('documento', models.CharField(max_length=20, unique=True, verbose_name='Número de Documento')),
                ('ficha', models.CharField(max_length=10, verbose_name='Número de Ficha')),
                ('programa', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='usuario.programaformativo', verbose_name='Programa de Formación')),
            ],
            options={
                'verbose_name': 'Perfil de Aprendiz',
                'verbose_name_plural': 'Perfiles de Aprendices',
            },
        ),
        migrations.CreateModel(
            name='PerfilEmpresa',
            fields=[
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='perfil_empresa', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('razon_social', models.CharField(max_length=255, verbose_name='Razón Social')),
                ('nit', models.CharField(max_length=20, unique=True, verbose_name='NIT')),
                ('telefono', models.CharField(max_length=15, verbose_name='Teléfono')),
                ('sector', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='usuario.sectorproductivo', verbose_name='Sector Productivo')),
            ],
            options={
                'verbose_name': 'Perfil de Empresa',
                'verbose_name_plural': 'Perfiles de Empresas',
            },
        ),
    ]
